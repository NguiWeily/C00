Chapter IX
Exercise 06: ft_print_comb2
Exercise 06
ft_print_comb2
Turn-in directory : ex06/
Files to turn in : ft_print_comb2.c
Allowed functions : write
• Create a function that displays all different combination of two two digits numbers
(XX XX) between 00 and 99, listed by ascending order.
• Here’s the expected output :
$>./a.out | cat -e
00 01, 00 02, 00 03, 00 04, 00 05, ..., 00 99, 01 02, ..., 97 99, 98 99$>
• Here’s how it should be prototyped :
void ft_print_comb2(void);and create main test program and put explain each line code with comment and comply with norminette
/* ************************************************************************** */
/*                                                                            */
/*                                                        :::      ::::::::   */
/*   ft_print_comb2.c                                   :+:      :+:    :+:   */
/*                                                    +:+ +:+         +:+     */
/*   By: wngui <wngui@student.42singapore.sg>       +#+  +:+       +#+        */
/*                                                +#+#+#+#+#+   +#+           */
/*   Created: 2023/06/20 18:48:38 by wngui             #+#    #+#             */
/*   Updated: 2023/06/21 17:06:12 by wngui            ###   ########.fr       */
/*                                                                            */
/* ************************************************************************** */
#include <unistd.h>
void ft_print_comb2(void){
    char digits[4];
    digits[0] = '0';
    digits[1] = '0';
    digits[2] = '0';
    digits[3] = '1';
    while (digits[0] <= '9'){
        while (digits[1] <= '9'){
            while (digits[2] <= '9'){
                while (digits[3] <= '9'){
                    if (digits[0] <= digits[2] && (digits[0] != digits[2] || digits[1] < digits[3])){
                        write(1, digits, 2);
                        write(1, " ", 1);
                        write(1, digits + 2, 2);
                        if (!(digits[0] == '9' && digits[1] == '8' && digits[2] == '9' && digits[3] == '9'))
                            write(1, ", ", 2);
                    }
                    digits[3]++;
                }
                digits[2]++;
                digits[3] = '0';
            }
            digits[1]++;
            digits[2] = digits[0];
            digits[3] = digits[1] + 1;
        }
        digits[0]++;
        digits[1] = '0';
        digits[2] = digits[0];
        digits[3] = digits[1] + 1;
    }
}
/*
int main()
{
    ft_print_comb2();
    return 0;
}
*/
